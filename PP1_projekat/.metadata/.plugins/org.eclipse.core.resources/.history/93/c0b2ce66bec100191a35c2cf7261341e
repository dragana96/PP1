<?xml version="1.0" encoding="UTF-8"?>
<!-- koriscenjem ant tool-a eliminisemo mogucnost zaboravljenog
 koraka;moramo definisati korake, u ant-u ti koraci 
 su u vidu targeta, svaki od tih targeta ima za identifikaciju
 svoj atribut name -->


<project name="MJCompiler" default = "compile"  basedir=".">
	<!-- Napisali smo mjlexer, ukljucili smo generatore
	     i mi pomocu jflex generatora zelimo da izgenerisemo nasu 
	     Java implentaciju naseg analizatora -->

	<!-- Ovaj target je bitan po tome sto, ako zelimo da svaki put prilikom
	     novog izvrsavanja da generisane klase iz proslog izvrsavanja
	     budu obrisane. Bitno je da prvo ide brisanje pa lexerGen -->
	<target name="delete">
		<delete>
			<fileset dir="src/rs/ac/bg/etf/pp1">
				<!--odavde zelim da se obrisu generisane klase-->
				<exclude name="sym_old.java" />
				<!-- ne zelimo ovo da se obrise -->
				<exclude name="TabExtended.java" />
				<exclude name="Yylex.java" />
				<exclude name="SemanticAnalyzer.java" />
				<exclude name  = "RuleVisitor.java"/>
				<exclude name  = "CodeGenerator.java"/>
				<exclude name  = "CounterVisitor.java"/>
				<exclude name="util/Log4JUtils.java" />
			</fileset>
		</delete>
		<delete>
			<fileset dir="spec">
				<exclude name="mjlexer.lex" />
				<exclude name="mjparser.cup" />
			</fileset>
		</delete>
	</target>

	<!-- Pomocu 'arg' prosledjujemo argumente,"-d" - zelimo da nam
	     ovaj jar ispise sve podrzane operacije koje ta biblioteka 
	     pruza.
	     Potrebno je proslediti i put do specifikacije koju smo mi 
	     napisali, jer nas generator na osnovu nje generise
	     nasu Java implementaciju.
	     -->
	<target name="lexerGen" depends="delete">
		<!-- prvo ce se izvrsiti delete pa potom lexerGen -->
		<java jar="lib/JFlex.jar" fork="true">
			<arg value="-d"/>
			<arg value="./src/rs/ac/bg/etf/pp1"/>
			<arg value="spec/mjlexer.lex"/>
		</java>
	</target>


	<target name="parserGen" depends = "delete" >
		<java jar="lib/cup_v10k.jar" fork="true">
			<arg value="-destdir"/>
			<arg value="src/rs/ac/bg/etf/pp1"/>
			<arg value="-ast"/>
			<arg value="src.rs.ac.bg.etf.pp1.ast"/>
			<arg value="-parser"/>
			<arg value="MJParser"/>
			<!-- <arg value="-dump_states"/> -->
            <arg value="-buildtree"/>
			<arg value="spec/mjparser.cup"/>
		</java>
	</target>

	<target name="repackage" depends="parserGen">
		<!-- Replaces all of the references to the old package name in files in the "src" directory -->
		<replace dir="src" value="rs.ac.bg.etf.pp1.ast" token="src.rs.ac.bg.etf.pp1.ast" summary="true"/>
	</target>

	<!-- Kompajliranje nasih java fajlova -->
	<target name="compile" depends="repackage">
		<!-- Zelim da mi se iz ovog foldera izkompajliraju sve
			 java klase. -->
		<javac srcdir="src/rs/ac/bg/etf/pp1" includeantruntime="false">


			<classpath>
				<!-- Klase koje mi kompajliramo imaju zavisnost od eksternih 
					 biblioteka, ali prilikom kompajliranja ti jar fajlovi nisu 
					 inkludovani u classpath, tako da mi to ovde rucno radimo. -->
				<pathelement path="lib/JFlex.jar"/>
				<pathelement path="lib/cup_v10k.jar"/>
				<pathelement path="lib/log4j-1.2.17.jar"/>
				<pathelement path="lib/symboltable.jar"/>
				<pathelement path="lib/mj-runtime-1.1.jar"/>
			</classpath>
		</javac>

	</target>
	
	
	<target name="disasm">
			<java classname="rs.etf.pp1.mj.runtime.disasm">
				<arg value="test/program.obj"/>
				<classpath>
					<pathelement location="lib/mj-runtime-1.1.jar"/>
				</classpath>
			</java>
		</target>

		<target name="runObj" depends="disasm" >
			<java classname="rs.etf.pp1.mj.runtime.Run">
				<arg value="test/program.obj"/>
				<classpath>
					<pathelement location="lib/mj-runtime-1.1"/>
				</classpath>
			</java>
		</target>
</project>

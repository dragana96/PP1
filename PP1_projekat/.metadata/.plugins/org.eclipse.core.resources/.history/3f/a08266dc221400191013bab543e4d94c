package rs.ac.bg.etf.pp1;

import java.util.Stack;

import rs.ac.bg.etf.pp1.ast.*;
import rs.etf.pp1.symboltable.*;
import rs.etf.pp1.symboltable.concepts.*;

import org.apache.log4j.Logger;

public class SemanticPass extends VisitorAdaptor {
	
	boolean errorDetected = false;

	Obj currentMethod = null;
	Struct currentMethodType;
	boolean returnFound = false;
	int nVars;
	Struct currentType = null;
	int currentActParamLevel = 0;
	Stack<Obj> paramStack = new Stack<Obj>();
	Stack<Integer> numParamStack = new Stack<Integer>();
	boolean doWhileFlag = false;
	
	Logger log = Logger.getLogger(getClass());

	public void report_error(String message, SyntaxNode info) {
		errorDetected = true;
		StringBuilder msg = new StringBuilder(message);
		int line = (info == null) ? 0: info.getLine();
		if (line != 0)
			msg.append (" na liniji ").append(line);
		log.error(msg.toString());
	}

	public void report_info(String message, SyntaxNode info) {
		StringBuilder msg = new StringBuilder(message); 
		int line = (info == null) ? 0: info.getLine();
		if (line != 0)
			msg.append (" na liniji ").append(line);
		log.info(msg.toString());
	}
	
	
	
//---------------------------------------- PROGRAM -------------------------------------------------
	
	public void visit(ProgName progName) {
		report_info("Pocetak programa  " + progName.getProgramName(), progName);
	    progName.obj = Tab.insert(Obj.Prog, progName.getProgramName(), Tab.noType);
		Tab.openScope(); //otvaramo Scope
	}
	
	public void visit(Program program) {
		//moramo da ulancamo sve lokalne simbole
		Tab.chainLocalSymbols(program.getProgName().obj);
		Tab.closeScope(); //zatvaramo scope
	}
	
	

//---------------------------------------- GLOBAL VAR -------------------------------------------------
//	public void visit(GlobalVarDeclartion Var) {
		//Tab.insert(Obj.Var, type)
//	}
	

	
	
	
}

	
